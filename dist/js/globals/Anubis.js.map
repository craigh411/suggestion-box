{"version":3,"names":[],"mappings":"","sources":["Anubis.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Anubis = function () {\n    function Anubis(searchBy, filter, sort, param, ajaxErrorEvent) {\n        _classCallCheck(this, Anubis);\n\n        this.searchBy = searchBy;\n        this.filter = filter;\n        this.sort = sort;\n        this.search = \"\";\n        this.param = param || 'search';\n        this.lastSearch = \"\";\n        this.ajaxErrorEvent = ajaxErrorEvent || 'suggestion-box.ajax.error';\n    }\n\n    _createClass(Anubis, [{\n        key: \"setData\",\n        value: function setData(data) {\n            this.data = data;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.data;\n        }\n    }, {\n        key: \"setSearchBy\",\n        value: function setSearchBy(searchBy) {\n            this.searchBy = searchBy;\n        }\n    }, {\n        key: \"getSearchBy\",\n        value: function getSearchBy() {\n            return this.searchBy;\n        }\n    }, {\n        key: \"getSuggestions\",\n        value: function getSuggestions() {\n            return this.filterData();\n        }\n    }, {\n        key: \"setSearch\",\n        value: function setSearch(search) {\n            // Escape any regex patterns as search string\n            var santizedSearch = search.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            this.search = santizedSearch;\n        }\n    }, {\n        key: \"getSearch\",\n        value: function getSearch() {\n            return this.search;\n        }\n    }, {\n        key: \"setFilter\",\n        value: function setFilter(filter) {\n            this.filter = filter;\n        }\n    }, {\n        key: \"getFilter\",\n        value: function getFilter() {\n            return this.filter;\n        }\n    }, {\n        key: \"setSort\",\n        value: function setSort(sort) {\n            this.sort = sort;\n        }\n    }, {\n        key: \"getSort\",\n        value: function getSort() {\n            return this.sort;\n        }\n    }, {\n        key: \"filterData\",\n        value: function filterData() {\n            var _this = this;\n\n            var filterPattern = this.filter.replace('{{INPUT}}', this.search);\n            var regex = new RegExp(filterPattern, \"i\");\n            var results = [];\n\n            if (this.data && this.search.length > 0) {\n                results = $.grep(this.data, function (item) {\n                    return (typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === \"object\" ? regex.test(item[_this.searchBy]) : regex.test(item);\n                });\n            }\n\n            results = this.sortData(results);\n\n            return results;\n        }\n    }, {\n        key: \"sortData\",\n        value: function sortData(data) {\n            return data.sort(this.sort);\n        }\n    }, {\n        key: \"getParam\",\n        value: function getParam() {\n            return this.param;\n        }\n    }, {\n        key: \"setParam\",\n        value: function setParam(param) {\n            this.param = param;\n        }\n    }, {\n        key: \"getLastSearch\",\n        value: function getLastSearch() {\n            return this.lastSearch;\n        }\n    }, {\n        key: \"clearLastSearch\",\n        value: function clearLastSearch() {\n            this.lastSearch = \"\";\n        }\n    }, {\n        key: \"killCurrentFetch\",\n        value: function killCurrentFetch() {\n            if (this.xhr != undefined) {\n                this.xhr.abort();\n            }\n        }\n\n        /* \r\n         * Fetches suggestions from the given url\r\n         * @param {string} url - The url to retrieve suggestion data from\r\n         * @param {function} callback - The actions to perform on successfull fetch\r\n         */\n\n    }, {\n        key: \"fetchSuggestions\",\n        value: function fetchSuggestions(url, callback) {\n            var _this2 = this;\n\n            this.lastSearch = this.search;\n\n            // Kill any current ajax connections.\n            this.killCurrentFetch();\n            // Set up the search param\n            var request = {};\n            request[this.param] = this.search;\n\n            this.xhr = $.ajax({\n                url: url,\n                method: 'get',\n                dataType: 'json',\n                data: request,\n                success: callback\n            });\n\n            if (this.xhr) {\n                this.xhr.fail(function (data) {\n                    // fire an ajax error event on failure with the error data\n                    $.event.trigger(_this2.ajaxErrorEvent, data);\n                });\n            }\n        }\n    }]);\n\n    return Anubis;\n}();\n\nexports.default = Anubis;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nwindow.Anubis = require('../Anubis.js').default;\n\n},{\"../Anubis.js\":1}]},{},[2]);\n"],"file":"Anubis.js"}