{"version":3,"names":[],"mappings":"","sources":["Typeahead.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require(\"./util.js\");\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Typeahead = function () {\n    function Typeahead(suggestions, searchBy) {\n        _classCallCheck(this, Typeahead);\n\n        this.suggestions = suggestions;\n        this.searchBy = searchBy;\n    }\n\n    _createClass(Typeahead, [{\n        key: \"setCurrentInput\",\n        value: function setCurrentInput(currentInput) {\n            this.currentInput = currentInput;\n        }\n    }, {\n        key: \"getTypeahead\",\n        value: function getTypeahead(selectedItemIndex) {\n            // If the suggestion box has an item selected get the item at that index instead.\n            var index = selectedItemIndex > -1 ? selectedItemIndex : 0;\n            var suggestion = this.suggestions.getSuggestions()[index] || \"\";\n\n            suggestion = (typeof suggestion === \"undefined\" ? \"undefined\" : _typeof(suggestion)) == \"object\" ? suggestion[this.searchBy] : suggestion;\n\n            var regex = new RegExp(\"^\" + this.currentInput, \"i\");\n            // Simply match the case of the typeahead to the case the user typed\n            var typeahead = suggestion.replace(regex, this.currentInput);\n\n            return typeahead;\n        }\n    }, {\n        key: \"removeTypeahead\",\n        value: function removeTypeahead() {\n            this.updateTypeahead(\"\");\n        }\n    }, {\n        key: \"updateTypeaheadPosition\",\n        value: function updateTypeaheadPosition(inputEl) {\n\n            var top = _util2.default.getCssValue(inputEl, 'padding-top') + _util2.default.getCssValue(inputEl, 'border-top-width') + _util2.default.getCssValue(inputEl, 'top');\n            var left = _util2.default.getCssValue(inputEl, 'padding-left') + _util2.default.getCssValue(inputEl, 'border-left-width') + inputEl.position().left;\n\n            $(\"#suggestion-box-dynamic-typeahead\").html('#suggestion-box-typeahead::after{left:' + left + 'px;top:' + top + 'px;}');\n        }\n    }, {\n        key: \"updateTypeahead\",\n        value: function updateTypeahead(value) {\n            $(\"#suggestion-box-typeahead\").attr('data-placeholder', value);\n        }\n    }, {\n        key: \"setSearchBy\",\n        value: function setSearchBy(searchBy) {\n            this.searchBy = searchBy;\n        }\n    }]);\n\n    return Typeahead;\n}();\n\nexports.default = Typeahead;\n\n},{\"./util.js\":3}],2:[function(require,module,exports){\n'use strict';\n\nwindow.Typeahead = require('../Typeahead.js').default;\n\n},{\"../Typeahead.js\":1}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Util = function () {\n    function Util() {\n        _classCallCheck(this, Util);\n    }\n\n    _createClass(Util, null, [{\n        key: 'getCssValue',\n        value: function getCssValue(el, name) {\n            var value = parseInt(el.css(name).replace('px', ''));\n            return isNaN(value) ? 0 : value;\n        }\n\n        /** Calculates the padding for the given elements**/\n\n    }, {\n        key: 'calculateVerticalPadding',\n        value: function calculateVerticalPadding(el) {\n            return Util.getCssValue(el, 'padding-bottom') + Util.getCssValue(el, 'padding-top');\n        }\n    }, {\n        key: 'calculateVerticalBorderWidth',\n        value: function calculateVerticalBorderWidth(el) {\n            return Util.getCssValue(el, 'border-bottom-width') + Util.getCssValue(el, 'border-top-width');\n        }\n    }, {\n        key: 'calculateHorizontalBorders',\n        value: function calculateHorizontalBorders(el) {\n            return Util.getCssValue(el, 'border-left-width') + Util.getCssValue(el, 'border-right-width');\n        }\n    }, {\n        key: 'copyArray',\n        value: function copyArray(arr) {\n            return arr.splice(0);\n        }\n    }, {\n        key: 'logger',\n        value: function logger(debug, message, type) {\n            if (debug) {\n                if (type === 'error') {\n                    console.log('%c[Suggestion-Box Error] ' + message, 'color: #f00');\n                } else {\n                    console.log('[suggestion-box ' + type + '] ' + message);\n                }\n            }\n        }\n\n        /*\r\n         * Applies the give border-radius to the search input, used when diosplaying suggestion list\r\n         * with an input that has a border radius.\r\n         */\n\n    }, {\n        key: 'applyBorderRadius',\n        value: function applyBorderRadius(el, left, right) {\n            el.css('border-bottom-left-radius', left);\n            el.css('border-bottom-right-radius', right);\n        }\n\n        /**\r\n         * Returns true if the given search is found in the given object;\r\n         */\n\n    }, {\n        key: 'inObject',\n        value: function inObject(search, obj) {\n            for (var key in obj) {\n                if (!obj.hasOwnProperty(key)) continue;\n\n                if (obj[key] == search) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    }, {\n        key: 'isId',\n        value: function isId(str) {\n            return str.charAt(0) == \"#\";\n        }\n    }, {\n        key: 'logError',\n        value: function logError(error) {\n            console.log(error);\n        }\n    }]);\n\n    return Util;\n}();\n\nexports.default = Util;\n\n},{}]},{},[2]);\n"],"file":"Typeahead.js"}