{"version":3,"sources":["suggestion-box.js"],"names":["$","fn","suggestionBox","options","getSelectionMouseIsOver","e","$parentLi","target","parent","children","index","select","position","selectedHref","$suggestionBox","find","attr","addClass","unselect","removeClass","resetSelection","selectedLi","moveDown","listSize","size","moveUp","goToSelection","window","location","getSuggestions","url","ajax","data","request","dataType","success","setJsonData","showSuggestions","settings","ajaxSuccess","error","ajaxError","setSuggestionBoxPosition","borders","getCssValue","$searchBox","padding","css","left","offset","leftOffset","top","height","topOffset","element","name","parseInt","replace","hideSuggestionBox","fadeOut","showSuggestionBox","fadeIn","setSuggestionBoxWidth","searchBoxWidth","getSearchBoxWidth","menuWidth","min-width","width","matches","filterResults","val","jsonData","results","$suggestions","heading","each","key","value","suggestion","active","html","showNoSuggestionsMessage","noSuggestionsMessage","json","Object","parseJSON","loadJson","console","log","regex","RegExp","grep","test","JSON","stringify","this","extend","delay","filter","paramName","append","ENTER_KEY","UP_ARROW_KEY","DOWN_ARROW_KEY","ESCAPE_KEY","mouseHover","timer","on","mousemove","nodeName","mouseout","blur","focus","keyup","which","clearTimeout","setTimeout","keydown","preventDefault","resize","suggestions","addSuggestions","loadSuggestions","selectedUrl","selectedSuggestion","text","reset","hide","show","ms","destroy","unbind","remove","jQuery"],"mappings":"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","file":"suggestion-box.min.js","sourcesContent":["(function ($) {\r\n\r\n    $.fn.suggestionBox = function (options) {\r\n\r\n        var $searchBox = this;\r\n\r\n        var settings = $.extend({\r\n                // default settings.\r\n                topOffset: 0,\r\n                leftOffset: 0,\r\n                delay: 400, // in ms\r\n                heading: 'Suggestions',\r\n                results: 10,\r\n                fadeIn: true,\r\n                fadeOut: false,\r\n                menuWidth: 'auto',\r\n                showNoSuggestionsMessage: false,\r\n                noSuggestionsMessage: 'No Suggestions Found',\r\n                filter: false,\r\n                ajaxError: function (e) {\r\n                    console.log(e);\r\n                },\r\n                ajaxSuccess: function (data) {\r\n                },\r\n                paramName: 'search'\r\n            },\r\n            options);\r\n\r\n\r\n        // Inject the suggestion box into the body of the web page\r\n        $('body').append('<div id=\"suggestion-box\"></div>');\r\n        // Turn off autocomplete\r\n        $searchBox.attr('autocomplete', 'off');\r\n\r\n        var $suggestionBox = $('#suggestion-box');\r\n        setSuggestionBoxPosition();\r\n\r\n        // Constants for key values\r\n        var ENTER_KEY = 13;\r\n        var UP_ARROW_KEY = 38;\r\n        var DOWN_ARROW_KEY = 40;\r\n        var ESCAPE_KEY = 27;\r\n\r\n        // Default values for selected list item\r\n        var selectedLi = -1;\r\n        var selectedHref = '#';\r\n\r\n        // Is the mouse hovering over the suggestion box?\r\n        var mouseHover = false;\r\n        // Timer for only making ajax calls when the user stops typing\r\n        var timer = null;\r\n        // Did we get any suggestions?\r\n        var matches = false;\r\n        // Is the search box active (does it have focus)\r\n        var active = false;\r\n        // create a blank object for our request\r\n        var request = {};\r\n        var jsonData;\r\n\r\n        function getSelectionMouseIsOver(e) {\r\n            var $parentLi = $(e.target).parent('li');\r\n            return $parentLi.parent().children().index($parentLi);\r\n        }\r\n\r\n        $suggestionBox.on({\r\n            'mousemove': function (e) {\r\n                if (e.target.nodeName === 'A') {\r\n                    unselect(selectedLi);\r\n                    selectedLi = getSelectionMouseIsOver(e);\r\n                    select(selectedLi);\r\n                    mouseHover = true;\r\n                }\r\n            },\r\n            'mouseout': function (e) {\r\n                if (e.target.nodeName === 'A') {\r\n                    mouseHover = false;\r\n                    unselect(selectedLi);\r\n                    resetSelection();\r\n                }\r\n            }\r\n        });\r\n\r\n        $searchBox.on({\r\n            'blur': function () {\r\n                active = false;\r\n                // Only close the menu if we are not clicking a link\r\n                if (!mouseHover) {\r\n                    hideSuggestionBox();\r\n                }\r\n            },\r\n            'focus': function () {\r\n                active = true;\r\n                if ($(this).val()) {\r\n                    showSuggestions(jsonData);\r\n                }\r\n            },\r\n            'keyup': function (e) {\r\n                if (settings.url) {\r\n                    // Ignore the navigation keys. We don't want to fire ajax calls when navigating\r\n                    if (e.which !== UP_ARROW_KEY && e.which !== DOWN_ARROW_KEY && e.which !== ESCAPE_KEY) {\r\n                        if (timer) {\r\n                            clearTimeout(timer);\r\n                        }\r\n                        // set the request to be sent sent as the data parameter\r\n                        request[settings.paramName] = $searchBox.val();\r\n                        timer = setTimeout(function () {\r\n                            getSuggestions(settings.url)\r\n                        }, settings.delay);\r\n                    }\r\n                } else if (settings.filter) {\r\n                    showSuggestions();\r\n                }\r\n            },\r\n            'keydown': function (e) {\r\n                if ($suggestionBox.css('display') !== 'none') {\r\n                    if (e.which == DOWN_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                    }\r\n                    if (e.which == UP_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                    }\r\n                    if (e.which === ENTER_KEY && selectedHref !== '#') {\r\n                        e.preventDefault();\r\n                        goToSelection();\r\n                    }\r\n                    if (e.which == ESCAPE_KEY) {\r\n                        e.preventDefault();\r\n                        hideSuggestionBox();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // Reset the position of the suggestion box if the window is re-sized\r\n        $(window).resize(function () {\r\n            setSuggestionBoxPosition();\r\n        });\r\n\r\n        /**\r\n         * Selects the suggestion at the given position\r\n         * @param position\r\n         */\r\n        function select(position) {\r\n            selectedHref = $suggestionBox.find(\"li:eq(\" + position + \") a\").attr('href');\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").addClass('selected');\r\n        }\r\n\r\n        /**\r\n         * Unselects the suggestion at the given position\r\n         * @param position\r\n         */\r\n        function unselect(position) {\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").removeClass('selected');\r\n        }\r\n\r\n        /**\r\n         * Resets any selected suggestions\r\n         */\r\n        function resetSelection() {\r\n            selectedHref = '#';\r\n            selectedLi = -1;\r\n        }\r\n\r\n        /**\r\n         * Moves the selection down to the next suggestion\r\n         */\r\n        function moveDown() {\r\n            var listSize = $suggestionBox.find('li').size();\r\n            if (selectedLi === (listSize - 1)) {\r\n                unselect(selectedLi);\r\n                resetSelection();\r\n            } else {\r\n                unselect(selectedLi);\r\n                selectedLi++;\r\n                select(selectedLi);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Moves the selection up to the previous suggestions\r\n         */\r\n        function moveUp() {\r\n            if (selectedLi > 0) {\r\n                unselect(selectedLi);\r\n                selectedLi--;\r\n                select(selectedLi);\r\n            } else if (selectedLi == -1) {\r\n                unselect(selectedLi);\r\n                selectedLi = $suggestionBox.find('li').size() - 1;\r\n                select(selectedLi);\r\n            } else {\r\n                unselect(0);\r\n                resetSelection();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Redirects the user to the selected suggestion location\r\n         */\r\n        function goToSelection() {\r\n            window.location = selectedHref;\r\n        }\r\n\r\n        /**\r\n         * Makes an ajax call to the given url\r\n         * @param url\r\n         */\r\n        function getSuggestions(url) {\r\n            $.ajax({\r\n                url: url,\r\n                data: request,\r\n                dataType: 'json',\r\n                success: function (data) {\r\n                    setJsonData(data);\r\n                    showSuggestions();\r\n                    settings.ajaxSuccess(data);\r\n                },\r\n                error: function (e) {\r\n                    settings.ajaxError(e);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Sets the position of the suggestion box\r\n         */\r\n        function setSuggestionBoxPosition() {\r\n            var borders = getCssValue($searchBox, 'border-bottom-width') + getCssValue($searchBox, 'border-top-width');\r\n            var padding = getCssValue($searchBox, 'padding-bottom') + getCssValue($searchBox, 'padding-top');\r\n\r\n            $suggestionBox.css({\r\n                'position': 'absolute',\r\n                'left': ($searchBox.offset().left) + settings.leftOffset,\r\n                'top': ($searchBox.offset().top) + ($searchBox.height() + borders + padding + settings.topOffset)\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Gets the css integer value for the given element.\r\n         * @param element\r\n         * @param name\r\n         * @returns {Number}\r\n         */\r\n        function getCssValue(element, name) {\r\n            return parseInt(element.css(name).replace('px', ''));\r\n        }\r\n\r\n        /**\r\n         * Hides the suggestion box\r\n         */\r\n        function hideSuggestionBox() {\r\n            if (settings.fadeOut) {\r\n                $suggestionBox.fadeOut();\r\n            } else {\r\n                $suggestionBox.css('display', 'none');\r\n            }\r\n            resetSelection();\r\n        }\r\n\r\n        /**\r\n         * Displays the suggestion-box\r\n         */\r\n        function showSuggestionBox() {\r\n            if (settings.fadeIn) {\r\n                $suggestionBox.fadeIn();\r\n            } else {\r\n                $suggestionBox.css('display', 'block');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Sets the width of the suggestion box\r\n         */\r\n        function setSuggestionBoxWidth() {\r\n            var searchBoxWidth = getSearchBoxWidth();\r\n            if (settings.menuWidth == 'auto') {\r\n                $suggestionBox.css({\r\n                    'min-width': searchBoxWidth\r\n                });\r\n            } else if (settings.menuWidth == 'constrain') {\r\n                $suggestionBox.css({\r\n                    'width': searchBoxWidth\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns the width of the search box\r\n         * @returns {number}\r\n         */\r\n        function getSearchBoxWidth() {\r\n            return (\r\n                $searchBox.width() +\r\n                getCssValue($searchBox, 'border-left') +\r\n                getCssValue($searchBox, 'border-right') +\r\n                getCssValue($searchBox, 'padding-left') +\r\n                getCssValue($searchBox, 'padding-right') -\r\n                getCssValue($suggestionBox, 'border-left') -\r\n                getCssValue($suggestionBox, 'border-right') -\r\n                getCssValue($suggestionBox, 'padding-left') -\r\n                getCssValue($suggestionBox, 'padding-right')\r\n            );\r\n        }\r\n\r\n        /**\r\n         * Shows the suggestion-box suggestions if they are available based on the data passed in\r\n         * @param data\r\n         */\r\n        function showSuggestions() {\r\n            resetSelection();\r\n\r\n            matches = false;\r\n            var data = (settings.filter) ? filterResults($searchBox.val()) : jsonData;\r\n\r\n            if (data) {\r\n                if (data.results) {\r\n                    var $suggestions = '<div id=\"suggestion-header\">' + settings.heading + '</div> ' +\r\n                        '<ul id=\"suggestion-box-list\">';\r\n\r\n                    $.each(data.results, function (key, value) {\r\n                        if (value.suggestion && value.url) {\r\n                            matches = true;\r\n                            var attr = \"\";\r\n                            if (value.attr) {\r\n                                $.each(value.attr, function (key, value) {\r\n                                    attr += value.name + '=\"' + value.value + '\" ';\r\n                                });\r\n                            }\r\n                            $suggestions += '<li><a href=\"' + value.url + '\" ' + attr + '>' + value.suggestion + '</a></li>';\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                        // break when maximum results have been found\r\n                        if (key === (settings.results - 1)) {\r\n                            return false;\r\n                        }\r\n                    });\r\n                    $suggestions += '</ul>';\r\n                }\r\n            }\r\n\r\n            // Check for focus before showing suggestion box. User could have clicked outside before request finished.\r\n            if (active) {\r\n                if (matches) {\r\n                    $suggestionBox.html($suggestions);\r\n                    setSuggestionBoxWidth();\r\n                    showSuggestionBox();\r\n                } else if (settings.showNoSuggestionsMessage) {\r\n                    setSuggestionBoxWidth();\r\n                    showSuggestionBox();\r\n                    $suggestionBox.html('<div id=\"no-suggestions\">' + settings.noSuggestionsMessage + '</div>');\r\n                } else {\r\n                    hideSuggestionBox();\r\n                }\r\n            } else {\r\n                hideSuggestionBox();\r\n            }\r\n        }\r\n\r\n        function setJsonData(json) {\r\n            if (json) {\r\n                jsonData = (json instanceof Object) ? json : $.parseJSON(json);\r\n            } else {\r\n                jsonData = {};\r\n            }\r\n        }\r\n\r\n        function loadJson(url) {\r\n            $.ajax({\r\n                url: url,\r\n                dataType: 'json',\r\n                success: function (data) {\r\n                    setJsonData(data);\r\n                },\r\n                error: function (e) {\r\n                    console.log(e);\r\n                }\r\n            });\r\n        }\r\n\r\n        function filterResults(value) {\r\n            var data;\r\n\r\n            if (!value) {\r\n                return {};\r\n            }\r\n            if (jsonData) {\r\n                if (jsonData.results) {\r\n                    var regex = new RegExp(\"(\" + value + \")\", \"i\");\r\n                    data = $.grep(jsonData.results, function (name) {\r\n                        return regex.test(name.suggestion);\r\n                    });\r\n                }\r\n            }\r\n            var json = JSON.stringify({\"results\": data});\r\n\r\n            return $.parseJSON(json);\r\n        }\r\n\r\n        // returned methods\r\n        return {\r\n            getSuggestions: function (url) {\r\n                getSuggestions(url);\r\n                return this;\r\n            },\r\n            showSuggestions: function (suggestions) {\r\n                $searchBox.focus();\r\n                setJsonData(suggestions);\r\n                showSuggestions();\r\n                return this;\r\n            },\r\n            addSuggestions: function (json) {\r\n                setJsonData(json);\r\n                return this;\r\n            },\r\n            loadSuggestions: function (url) {\r\n                loadJson(url);\r\n                return this;\r\n            },\r\n            moveUp: function () {\r\n                moveUp();\r\n                return this;\r\n            },\r\n            moveDown: function () {\r\n                moveDown();\r\n                return this;\r\n            },\r\n            selectedUrl: function () {\r\n                return selectedHref;\r\n            },\r\n            selectedSuggestion: function () {\r\n                return $suggestionBox.find('li:eq(' + selectedLi + ')').text();\r\n            },\r\n            position: function () {\r\n                return selectedLi;\r\n            },\r\n            jsonData: function () {\r\n                return JSON.stringify(jsonData);\r\n            },\r\n            select: function (position) {\r\n                unselect(selectedLi);\r\n                selectedLi = position;\r\n                select(position);\r\n                return this;\r\n            },\r\n            reset: function () {\r\n                unselect(selectedLi);\r\n                resetSelection();\r\n                return this;\r\n            },\r\n            hide: function () {\r\n                hideSuggestionBox();\r\n                return this;\r\n            },\r\n            show: function () {\r\n                $searchBox.focus();\r\n                showSuggestionBox();\r\n                return this;\r\n            },\r\n            url: function (url) {\r\n                settings.url = url;\r\n                return this;\r\n            },\r\n            fadeIn: function (fadeIn) {\r\n                settings.fadeIn = fadeIn;\r\n                return this;\r\n            },\r\n            fadeOut: function (fadeOut) {\r\n                settings.fadeOut = fadeOut;\r\n                return this;\r\n            },\r\n            delay: function (ms) {\r\n                settings.delay = ms;\r\n                return this;\r\n            },\r\n            heading: function (heading) {\r\n                settings.heading = heading;\r\n                return this;\r\n            },\r\n            results: function (results) {\r\n                settings.results = results;\r\n                return this;\r\n            },\r\n            ajaxError: function (ajaxError) {\r\n                settings.ajaxError = ajaxError;\r\n                return this;\r\n            },\r\n            ajaxSuccess: function (ajaxSuccess) {\r\n                settings.ajaxSuccess = ajaxSuccess;\r\n                return this;\r\n            },\r\n            destroy: function () {\r\n                $searchBox.unbind(this);\r\n                $suggestionBox.remove();\r\n            }\r\n        };\r\n    };\r\n}(jQuery));"],"sourceRoot":"/source/"}