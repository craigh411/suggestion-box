{"version":3,"sources":["suggestion-box.js"],"names":["$","fn","suggestionBox","options","setSuggestionBoxPosition","borders","getCssValue","$searchBox","padding","$suggestionBox","css","position","left","offset","settings","leftOffset","top","height","topOffset","element","name","topBorders","parseInt","replace","this","extend","delay","heading","results","fadeIn","fadeOut","menuWidth","ajaxError","e","console","log","paramName","url","append","attr","ENTER_KEY","UP_ARROW_KEY","DOWN_ARROW_KEY","ESCAPE_KEY","selectedLi","selectedHref","mouseHover","timer","matches","request","on","mousemove","target","nodeName","find","removeClass","$parentLi","parent","children","index","select","mouseout","unselect","resetSelection","blur","focus","val","keyup","which","clearTimeout","setTimeout","ajax","data","dataType","success","$suggestions","each","key","value","suggestion","document","activeElement","id","html","searchBoxWidth","width","min-width","error","keydown","preventDefault","listSize","size","window","location","resize","addClass","jQuery"],"mappings":"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","file":"suggestion-box.min.js","sourcesContent":["(function ($) {\r\n\r\n\r\n    $.fn.suggestionBox = function (options) {\r\n        var $searchBox = this;\r\n\r\n        var settings = $.extend({\r\n                // default settings.\r\n                topOffset: 0,\r\n                leftOffset: 0,\r\n                delay: 400, // in ms\r\n                heading: 'Suggestions',\r\n                results: 10,\r\n                fadeIn: true,\r\n                fadeOut: true,\r\n                menuWidth: 'auto',\r\n                ajaxError: function (e) {\r\n                    console.log(e);\r\n                },\r\n                paramName: 'search'\r\n            },\r\n            options);\r\n\r\n        if (!settings.url) {\r\n            throw 'url of suggestion json required';\r\n        }\r\n\r\n        // Inject the suggestion box into the body of the web page\r\n        $('body').append('<div id=\"suggestion-box\"></div>');\r\n        // Turn off autocomplete\r\n        $searchBox.attr('autocomplete', 'off');\r\n\r\n        var $suggestionBox = $('#suggestion-box');\r\n        setSuggestionBoxPosition();\r\n\r\n        // Constants for key values\r\n        const ENTER_KEY = 13;\r\n        const UP_ARROW_KEY = 38;\r\n        const DOWN_ARROW_KEY = 40;\r\n        const ESCAPE_KEY = 27;\r\n\r\n        // Default values for selected list item\r\n        var selectedLi = -1;\r\n        var selectedHref = '#';\r\n\r\n        // Is the mouse hovering over the suggestion box?\r\n        var mouseHover = false;\r\n        // Timer for only making ajax calls when the user stops typing\r\n        var timer = null;\r\n        // Did we get any suggestions?\r\n        var matches = false;\r\n        // create a blank object for our request\r\n        var request = {};\r\n\r\n\r\n        $suggestionBox.on({\r\n            'mousemove': function (e) {\r\n                if (e.target.nodeName === 'A') {\r\n                    $(this).find('li').removeClass('selected');\r\n                    var $parentLi = $(e.target).parent('li');\r\n                    selectedLi = $parentLi.parent().children().index($parentLi);\r\n                    select(selectedLi);\r\n                    mouseHover = true;\r\n                }\r\n            },\r\n            'mouseout': function (e) {\r\n                if (e.target.nodeName === 'A') {\r\n                    mouseHover = false;\r\n                    unselect(selectedLi);\r\n                    resetSelection();\r\n                }\r\n            }\r\n        });\r\n        $searchBox.on({\r\n            'blur': function () {\r\n                // Only close the menu if we a re not clicking a link\r\n                if (!mouseHover) {\r\n                    if (settings.fadeOut) {\r\n                        $suggestionBox.fadeOut();\r\n                    } else {\r\n                        $suggestionBox.css('display', 'none');\r\n                    }\r\n                }\r\n            },\r\n            'focus': function () {\r\n                if ($(this).val()) {\r\n                    if (settings.fadeIn) {\r\n                        $suggestionBox.fadeIn();\r\n                    } else {\r\n                        $suggestionBox.css('display', 'block');\r\n                    }\r\n                }\r\n            },\r\n            'keyup': function (e) {\r\n                // Ignore the navigation keys. We don't want to fire ajax calls when navigating\r\n                if (e.which !== UP_ARROW_KEY && e.which !== DOWN_ARROW_KEY && e.which !== ESCAPE_KEY) {\r\n                    if (timer) {\r\n                        clearTimeout(timer);\r\n                    }\r\n\r\n                    // set the request to be sent sent as the data parameter\r\n                    request[settings.paramName] = $searchBox.val();\r\n\r\n                    timer = setTimeout(function () {\r\n                        $.ajax({\r\n                            url: settings.url,\r\n                            data: request,\r\n                            dataType: 'json',\r\n                            success: function (data) {\r\n                                var $suggestions = '<div id=\"suggestion-header\">' + settings.heading + '</div> ' +\r\n                                    '<ul id=\"suggestion-box-list\">';\r\n\r\n                                $.each(data.results, function (key, value) {\r\n                                    if (value.suggestion) {\r\n                                        matches = true;\r\n                                        $suggestions += '<li><a href=\"' + value.url + '\">' + value.suggestion + '</a></li>';\r\n                                    } else {\r\n                                        matches = false;\r\n                                        $suggestionBox.css('display', 'none');\r\n                                    }\r\n\r\n                                    if (key === (settings.results - 1)) {\r\n                                        return false;\r\n                                    }\r\n                                });\r\n                                $suggestions += '</ul>';\r\n                                // Check for focus before showing suggestion box. User could have clicked outside before request finished.\r\n                                if (document.activeElement.id == 'search') {\r\n                                    if (matches) {\r\n                                        $suggestionBox.html($suggestions);\r\n                                        var searchBoxWidth = (\r\n                                            $searchBox.width() +\r\n                                            getCssValue($searchBox, 'border-left') +\r\n                                            getCssValue($searchBox, 'border-right') +\r\n                                            getCssValue($searchBox, 'padding-left') +\r\n                                            getCssValue($searchBox, 'padding-right') -\r\n                                            getCssValue($suggestionBox, 'border-left') -\r\n                                            getCssValue($suggestionBox, 'border-right') -\r\n                                            getCssValue($suggestionBox, 'padding-left') -\r\n                                            getCssValue($suggestionBox, 'padding-right')\r\n                                        );\r\n\r\n                                        if (settings.menuWidth == 'auto') {\r\n                                            $suggestionBox.css({\r\n                                                'min-width': searchBoxWidth\r\n                                            });\r\n                                        } else if (settings.menuWidth == 'constrain') {\r\n                                            $suggestionBox.css({\r\n                                                'width': searchBoxWidth\r\n                                            });\r\n                                        }\r\n\r\n                                        if (settings.fadeIn) {\r\n                                            $suggestionBox.fadeIn();\r\n                                        } else {\r\n                                            $suggestionBox.css('display', 'block');\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            error: function (e) {\r\n                                settings.ajaxError(e);\r\n                            }\r\n                        });\r\n                    }, settings.delay);\r\n                }\r\n            },\r\n            'keydown': function (e) {\r\n\r\n                // Ignore navigation key presses mouse is hovering over a suggestion\r\n                if ($suggestionBox.css('display') !== 'none') {\r\n                    // down arrow\r\n                    if (e.which == DOWN_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        var listSize = $suggestionBox.find('li').size();\r\n                        if (selectedLi === (listSize - 1)) {\r\n                            unselect(selectedLi);\r\n                            resetSelection();\r\n\r\n                        } else {\r\n                            unselect(selectedLi);\r\n                            selectedLi++;\r\n                            select(selectedLi);\r\n                        }\r\n                    }\r\n\r\n                    // Up arrow\r\n                    if (e.which == UP_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        if (selectedLi > 0) {\r\n                            unselect(selectedLi);\r\n                            selectedLi--;\r\n                            select(selectedLi);\r\n                        } else if (selectedLi == -1) {\r\n                            unselect(selectedLi);\r\n                            selectedLi = $suggestionBox.find('li').size() - 1;\r\n                            select(selectedLi);\r\n                        } else {\r\n                            unselect(0);\r\n                            resetSelection();\r\n                        }\r\n\r\n                    }\r\n\r\n                    // Enter key\r\n                    if (e.which === ENTER_KEY && selectedHref !== '#') {\r\n                        e.preventDefault();\r\n                        window.location = selectedHref;\r\n\r\n                    }\r\n\r\n                    // Escape key\r\n                    if (e.which == ESCAPE_KEY) {\r\n                        $suggestionBox.css('display', 'none');\r\n                        resetSelection();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // Reset the position of the suggestion box if the window is re-sized\r\n        $(window).resize(function () {\r\n            setSuggestionBoxPosition();\r\n        });\r\n\r\n\r\n        var select = function (position) {\r\n            selectedHref = $suggestionBox.find(\"li:eq(\" + position + \") a\").attr('href');\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").addClass('selected');\r\n        };\r\n\r\n        var unselect = function (position) {\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").removeClass('selected');\r\n        };\r\n\r\n        var resetSelection = function () {\r\n            selectedHref = '#';\r\n            selectedLi = -1;\r\n        };\r\n\r\n        function setSuggestionBoxPosition() {\r\n            var borders = getCssValue($searchBox, 'border-bottom') + getCssValue($searchBox, 'border-top');\r\n            var padding = getCssValue($searchBox, 'padding-bottom') + getCssValue($searchBox, 'padding-top');\r\n\r\n            $suggestionBox.css({\r\n                'position': 'absolute',\r\n                'left': ($searchBox.offset().left) + settings.leftOffset,\r\n                'top': ($searchBox.offset().top) + ($searchBox.height() + borders + padding + settings.topOffset)\r\n            });\r\n        }\r\n\r\n        function getCssValue(element, name) {\r\n            return topBorders = parseInt(element.css(name).replace('px', ''));\r\n        }\r\n\r\n        return this;\r\n    };\r\n}(jQuery));"],"sourceRoot":"/source/"}