{"version":3,"sources":["suggestion-box.js"],"names":["$","fn","suggestionBox","options","select","position","selectedHref","$suggestionBox","find","attr","addClass","unselect","removeClass","resetSelection","selectedLi","moveDown","listSize","size","moveUp","goToSelection","window","location","getSuggestions","url","ajax","data","request","dataType","success","setJsonData","showSuggestions","settings","ajaxSuccess","error","e","ajaxError","getSelectionMouseIsOver","$parentLi","target","parent","children","index","setSuggestionBoxPosition","borders","getCssValue","$searchBox","padding","css","left","offset","leftOffset","top","height","topOffset","element","name","parseInt","replace","hideSuggestionBox","fadeOut","showSuggestionBox","fadeIn","setSuggestionBoxWidth","searchBoxWidth","getSearchBoxWidth","widthAdjustment","menuWidth","min-width","width","createSuggestionsList","$suggestions","heading","each","results","key","value","suggestion","matches","filterResults","val","jsonData","active","html","showNoSuggestionsMessage","length","noSuggestionsMessage","json","Object","parseJSON","loadJson","console","log","filterPattern","regex","RegExp","grep","test","sort","JSON","stringify","this","extend","delay","filter","paramName","append","ENTER_KEY","UP_ARROW_KEY","DOWN_ARROW_KEY","ESCAPE_KEY","mouseHover","timer","on","mousemove","nodeName","mouseout","blur","focus","keyup","which","clearTimeout","setTimeout","keydown","preventDefault","paste","resize","addSuggestions","loadSuggestions","getJson","selectedUrl","selectedSuggestion","text","reset","show","hide","ms","pattern","sortFunc","destroy","unbind","remove","jQuery"],"mappings":"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","file":"suggestion-box.min.js","sourcesContent":["(function ($) {\r\n\r\n    $.fn.suggestionBox = function (options) {\r\n\r\n        var $searchBox = this;\r\n\r\n        var settings = $.extend({\r\n                // default settings.\r\n                topOffset: 0,\r\n                leftOffset: 0,\r\n                widthAdjustment: 0,\r\n                delay: 400, // in ms\r\n                heading: 'Suggestions',\r\n                results: 10,\r\n                fadeIn: true,\r\n                fadeOut: false,\r\n                menuWidth: 'auto',\r\n                showNoSuggestionsMessage: false,\r\n                noSuggestionsMessage: 'No Suggestions Found',\r\n                filter: false,\r\n                filterPattern: \"({INPUT})\",\r\n                ajaxError: function (e) {\r\n                    console.log(e);\r\n                },\r\n                ajaxSuccess: function (data) {\r\n                },\r\n                paramName: 'search'\r\n            },\r\n            options);\r\n\r\n\r\n        // Inject the suggestion box into the body of the web page\r\n        $('body').append('<div id=\"suggestion-box\"></div>');\r\n\r\n        // Turn off autocomplete\r\n        $searchBox.attr('autocomplete', 'off');\r\n\r\n        var $suggestionBox = $('#suggestion-box');\r\n        setSuggestionBoxPosition();\r\n\r\n        // Constants for key values\r\n        var ENTER_KEY = 13;\r\n        var UP_ARROW_KEY = 38;\r\n        var DOWN_ARROW_KEY = 40;\r\n        var ESCAPE_KEY = 27;\r\n\r\n        // Default values for selected list item\r\n        var selectedLi = -1;\r\n        var selectedHref = '#';\r\n\r\n        // Is the mouse hovering over the suggestion box?\r\n        var mouseHover = false;\r\n        // Timer for only making ajax calls when the user stops typing\r\n        var timer = null;\r\n        // Did we get any suggestions?\r\n        var matches = false;\r\n        // Is the search box active (does it have focus)\r\n        var active = false;\r\n        // create a blank object for our request\r\n        var request = {};\r\n        var jsonData = {};\r\n\r\n\r\n        $suggestionBox.on({\r\n            mousemove: function (e) {\r\n                if (e.target.nodeName === 'A') {\r\n                    unselect(selectedLi);\r\n                    selectedLi = getSelectionMouseIsOver(e);\r\n                    select(selectedLi);\r\n                    mouseHover = true;\r\n                }\r\n            },\r\n            mouseout: function (e) {\r\n                if (e.target.nodeName === 'A') {\r\n                    mouseHover = false;\r\n                    unselect(selectedLi);\r\n                    resetSelection();\r\n                }\r\n            }\r\n        });\r\n\r\n        $searchBox.on({\r\n            blur: function () {\r\n                active = false;\r\n                // Only close the menu if we are not clicking a link\r\n                if (!mouseHover) {\r\n                    hideSuggestionBox();\r\n                }\r\n            },\r\n            focus: function () {\r\n                active = true;\r\n                if ($(this).val()) {\r\n                    showSuggestions(jsonData);\r\n                }\r\n            },\r\n            keyup: function (e) {\r\n                // Ignore the navigation keys. We don't want to fire ajax calls when navigating\r\n                if (e.which !== UP_ARROW_KEY && e.which !== DOWN_ARROW_KEY && e.which !== ESCAPE_KEY) {\r\n                    if (settings.url) {\r\n                        if (timer) {\r\n                            clearTimeout(timer);\r\n                        }\r\n                        // set the request to be sent sent as the data parameter\r\n                        request[settings.paramName] = $searchBox.val();\r\n                        timer = setTimeout(function () {\r\n                            getSuggestions(settings.url)\r\n                        }, settings.delay);\r\n                    }\r\n\r\n                    if (settings.filter) {\r\n                        showSuggestions();\r\n                    }\r\n                }\r\n            },\r\n            keydown: function (e) {\r\n                if ($suggestionBox.css('display') !== 'none') {\r\n                    if (e.which == DOWN_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                    }\r\n                    if (e.which == UP_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                    }\r\n                    if (e.which === ENTER_KEY && selectedHref !== '#') {\r\n                        e.preventDefault();\r\n                        goToSelection();\r\n                    }\r\n                    if (e.which == ESCAPE_KEY) {\r\n                        e.preventDefault();\r\n                        hideSuggestionBox();\r\n                    }\r\n                }\r\n            },\r\n            paste: function () {\r\n                // Simulate keyup after 200ms otherwise the value of the search box will not be available\r\n                setTimeout(function () {\r\n                    $searchBox.keyup();\r\n                }, 200);\r\n            }\r\n        });\r\n\r\n        // Reset the position of the suggestion box if the window is re-sized\r\n        $(window).resize(function () {\r\n            setSuggestionBoxPosition();\r\n        });\r\n\r\n        /**\r\n         * Selects the suggestion at the given position\r\n         * @param position\r\n         */\r\n        function select(position) {\r\n            selectedHref = $suggestionBox.find(\"li:eq(\" + position + \") a\").attr('href');\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").addClass('selected');\r\n        }\r\n\r\n        /**\r\n         * Unselects the suggestion at the given position\r\n         * @param position\r\n         */\r\n        function unselect(position) {\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").removeClass('selected');\r\n        }\r\n\r\n        /**\r\n         * Resets any selected suggestions\r\n         */\r\n        function resetSelection() {\r\n            selectedHref = '#';\r\n            selectedLi = -1;\r\n        }\r\n\r\n        /**\r\n         * Moves the selection down to the next suggestion\r\n         */\r\n        function moveDown() {\r\n            var listSize = $suggestionBox.find('li').size();\r\n            if (selectedLi === (listSize - 1)) {\r\n                unselect(selectedLi);\r\n                resetSelection();\r\n            } else {\r\n                unselect(selectedLi);\r\n                selectedLi++;\r\n                select(selectedLi);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Moves the selection up to the previous suggestions\r\n         */\r\n        function moveUp() {\r\n            if (selectedLi > 0) {\r\n                unselect(selectedLi);\r\n                selectedLi--;\r\n                select(selectedLi);\r\n            } else if (selectedLi == -1) {\r\n                unselect(selectedLi);\r\n                selectedLi = $suggestionBox.find('li').size() - 1;\r\n                select(selectedLi);\r\n            } else {\r\n                unselect(0);\r\n                resetSelection();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Redirects the user to the selected suggestion location\r\n         */\r\n        function goToSelection() {\r\n            window.location = selectedHref;\r\n        }\r\n\r\n        /**\r\n         * Makes an ajax call to the given url\r\n         * @param url\r\n         */\r\n        function getSuggestions(url) {\r\n            $.ajax({\r\n                url: url,\r\n                data: request,\r\n                dataType: 'json',\r\n                success: function (data) {\r\n                    setJsonData(data);\r\n                    showSuggestions();\r\n                    settings.ajaxSuccess(data);\r\n                },\r\n                error: function (e) {\r\n                    settings.ajaxError(e);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Returns the index of the list item the mouse is currently hovering over\r\n         * @param e\r\n         * @returns {Number}\r\n         */\r\n        function getSelectionMouseIsOver(e) {\r\n            var $parentLi = $(e.target).parent('li');\r\n            return $parentLi.parent().children().index($parentLi);\r\n        }\r\n\r\n        /**\r\n         * Sets the position of the suggestion box\r\n         */\r\n        function setSuggestionBoxPosition() {\r\n            var borders = getCssValue($searchBox, 'border-bottom-width') + getCssValue($searchBox, 'border-top-width');\r\n            var padding = getCssValue($searchBox, 'padding-bottom') + getCssValue($searchBox, 'padding-top');\r\n\r\n            $suggestionBox.css({\r\n                'position': 'absolute',\r\n                'left': ($searchBox.offset().left) + settings.leftOffset,\r\n                'top': ($searchBox.offset().top) + ($searchBox.height() + borders + padding + settings.topOffset)\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Gets the css integer value for the given element.\r\n         * @param element\r\n         * @param name\r\n         * @returns {Number}\r\n         */\r\n        function getCssValue(element, name) {\r\n            return parseInt(element.css(name).replace('px', ''));\r\n        }\r\n\r\n        /**\r\n         * Hides the suggestion box\r\n         */\r\n        function hideSuggestionBox() {\r\n            if (settings.fadeOut) {\r\n                $suggestionBox.fadeOut();\r\n            } else {\r\n                $suggestionBox.css('display', 'none');\r\n            }\r\n            resetSelection();\r\n        }\r\n\r\n        /**\r\n         * Displays the suggestion-box\r\n         */\r\n        function showSuggestionBox() {\r\n            if (settings.fadeIn) {\r\n                $suggestionBox.fadeIn();\r\n            } else {\r\n                $suggestionBox.css('display', 'block');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Sets the width of the suggestion box\r\n         */\r\n        function setSuggestionBoxWidth() {\r\n            var searchBoxWidth = getSearchBoxWidth() + settings.widthAdjustment;\r\n            if (settings.menuWidth == 'auto') {\r\n                $suggestionBox.css({\r\n                    'min-width': searchBoxWidth\r\n                });\r\n            } else if (settings.menuWidth == 'constrain') {\r\n                $suggestionBox.css({\r\n                    'width': searchBoxWidth\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns the width of the search box\r\n         * @returns {number}\r\n         */\r\n        function getSearchBoxWidth() {\r\n            return (\r\n                $searchBox.width() +\r\n                getCssValue($searchBox, 'border-left-width') +\r\n                getCssValue($searchBox, 'border-right-width') +\r\n                getCssValue($searchBox, 'padding-left') +\r\n                getCssValue($searchBox, 'padding-right')\r\n            );\r\n        }\r\n\r\n        function createSuggestionsList(data) {\r\n            var $suggestions = '<div id=\"suggestion-header\">' + settings.heading + '</div> ' +\r\n                '<ul id=\"suggestion-box-list\">';\r\n\r\n            $.each(data.results, function (key, value) {\r\n                if (value.suggestion && value.url) {\r\n                    matches = true;\r\n                    var attr = \"\";\r\n                    if (value.attr) {\r\n                        $.each(value.attr, function (key, value) {\r\n                            attr += value.name + '=\"' + value.value + '\" ';\r\n                        });\r\n                    }\r\n                    $suggestions += '<li><a href=\"' + value.url + '\" ' + attr + '>' + value.suggestion + '</a></li>';\r\n                } else {\r\n                    return false;\r\n                }\r\n\r\n                // break when maximum results have been found\r\n                if (key === (settings.results - 1)) {\r\n                    return false;\r\n                }\r\n            });\r\n            $suggestions += '</ul>';\r\n\r\n            return $suggestions;\r\n        }\r\n\r\n        /**\r\n         * Shows the suggestion-box suggestions if they are available based on the data passed in\r\n         */\r\n        function showSuggestions() {\r\n            resetSelection();\r\n\r\n            matches = false;\r\n\r\n            var data = (settings.filter) ? filterResults($searchBox.val()) : jsonData;\r\n            if (data) {\r\n                if (data.results) {\r\n                    var $suggestions = createSuggestionsList(data);\r\n                }\r\n            }\r\n\r\n            // Check for focus before showing suggestion box. User could have clicked outside before request finished.\r\n            if (active) {\r\n                if (matches) {\r\n                    $suggestionBox.html($suggestions);\r\n                    setSuggestionBoxWidth();\r\n                    showSuggestionBox();\r\n                } else if (settings.showNoSuggestionsMessage && $searchBox.val().length > 0) {\r\n                    setSuggestionBoxWidth();\r\n                    showSuggestionBox();\r\n                    $suggestionBox.html('<div id=\"no-suggestions\">' + settings.noSuggestionsMessage + '</div>');\r\n                } else {\r\n                    hideSuggestionBox();\r\n                }\r\n            } else {\r\n                hideSuggestionBox();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Sets the current JSON data ready for display\r\n         * @param json\r\n         */\r\n        function setJsonData(json) {\r\n            if (json) {\r\n                jsonData = (json instanceof Object) ? json : $.parseJSON(json);\r\n            } else {\r\n                jsonData = {};\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Loads JSON from the given url\r\n         * @param url\r\n         */\r\n        function loadJson(url) {\r\n            $.ajax({\r\n                url: url,\r\n                dataType: 'json',\r\n                success: function (data) {\r\n                    setJsonData(data);\r\n                },\r\n                error: function (e) {\r\n                    console.log(e);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Filters the JSON based on the user input\r\n         * @param value\r\n         * @returns {Object}\r\n         */\r\n        function filterResults(value) {\r\n            var data;\r\n\r\n            filterPattern = settings.filterPattern.replace(\"{INPUT}\", value);\r\n            if (!value) {\r\n                return {};\r\n            }\r\n            if (jsonData) {\r\n                if (jsonData.results) {\r\n\r\n                    var regex = new RegExp(filterPattern, \"i\");\r\n\r\n                    data = $.grep(jsonData.results, function (name) {\r\n                        return regex.test(name.suggestion);\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (settings.sort) {\r\n                data.sort(settings.sort);\r\n            }\r\n\r\n            var json = JSON.stringify({\"results\": data});\r\n\r\n            return $.parseJSON(json);\r\n        }\r\n\r\n        // returned methods\r\n        return {\r\n            getSuggestions: function (url) {\r\n                getSuggestions(url);\r\n                return this;\r\n            },\r\n            addSuggestions: function (json) {\r\n                setJsonData(json);\r\n                return this;\r\n            },\r\n            loadSuggestions: function (url) {\r\n                loadJson(url);\r\n                return this;\r\n            },\r\n            getJson: function () {\r\n                return JSON.stringify(jsonData);\r\n            },\r\n            moveUp: function () {\r\n                moveUp();\r\n                return this;\r\n            },\r\n            moveDown: function () {\r\n                moveDown();\r\n                return this;\r\n            },\r\n            selectedUrl: function () {\r\n                return selectedHref;\r\n            },\r\n            selectedSuggestion: function () {\r\n                return $suggestionBox.find('li:eq(' + selectedLi + ')').text();\r\n            },\r\n            position: function () {\r\n                return selectedLi;\r\n            },\r\n            select: function (position) {\r\n                unselect(selectedLi);\r\n                selectedLi = position;\r\n                select(position);\r\n                return this;\r\n            },\r\n            reset: function () {\r\n                unselect(selectedLi);\r\n                resetSelection();\r\n                return this;\r\n            },\r\n            show: function () {\r\n                $searchBox.focus();\r\n                showSuggestions();\r\n                return this;\r\n            },\r\n            hide: function () {\r\n                hideSuggestionBox();\r\n                return this;\r\n            },\r\n            url: function (url) {\r\n                settings.url = url;\r\n                return this;\r\n            },\r\n            fadeIn: function (fadeIn) {\r\n                settings.fadeIn = fadeIn;\r\n                return this;\r\n            },\r\n            fadeOut: function (fadeOut) {\r\n                settings.fadeOut = fadeOut;\r\n                return this;\r\n            },\r\n            delay: function (ms) {\r\n                settings.delay = ms;\r\n                return this;\r\n            },\r\n            heading: function (heading) {\r\n                settings.heading = heading;\r\n                return this;\r\n            },\r\n            results: function (results) {\r\n                settings.results = results;\r\n                return this;\r\n            },\r\n            ajaxError: function (ajaxError) {\r\n                settings.ajaxError = ajaxError;\r\n                return this;\r\n            },\r\n            ajaxSuccess: function (ajaxSuccess) {\r\n                settings.ajaxSuccess = ajaxSuccess;\r\n                return this;\r\n            },\r\n            filter: function (filter) {\r\n                settings.filter = filter;\r\n                return this;\r\n            },\r\n            filterPattern: function (pattern) {\r\n                settings.filterPattern = pattern;\r\n                return this;\r\n            },\r\n            sort: function (sortFunc) {\r\n                settings.sort = sortFunc;\r\n                return this;\r\n            },\r\n            destroy: function () {\r\n                $searchBox.unbind(this);\r\n                $suggestionBox.remove();\r\n                return null;\r\n            }\r\n        };\r\n    };\r\n}(jQuery));"],"sourceRoot":"/source/"}