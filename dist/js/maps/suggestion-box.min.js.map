{"version":3,"sources":["suggestion-box.js"],"names":["$","fn","suggestionBox","options","doClick","e","settings","onClick","$suggestionBox","css","$searchBox","val","isSuggestion","target","parents","length","nodeName","select","position","selectedHref","find","attr","addClass","unselect","removeClass","resetSelection","selectedLi","moveDown","listSize","size","moveUp","goToSelection","window","location","getSuggestions","url","ajaxCalledVal","ajax","data","request","dataType","success","selectionHasChanged","currentLi","jsonData","results","JSON","stringify","setJsonData","showSuggestions","ajaxSuccess","error","ajaxError","getSelectionMouseIsOver","$parentLi","parent","children","index","setSuggestionBoxPosition","borders","getCssValue","padding","left","offset","leftOffset","top","height","topOffset","element","name","parseInt","replace","hideSuggestionBox","fadeOut","showSuggestionBox","fadeIn","setSuggestionBoxWidth","searchBoxWidth","getSearchBoxWidth","widthAdjustment","menuWidth","min-width","width","createSuggestionsList","$suggestions","heading","each","key","value","suggestion","matches","keys","Object","i","customValues","custom","forceShow","filterResults","active","html","showNoSuggestionsMessage","noSuggestionsMessage","json","parseJSON","loadJson","console","log","filterPattern","regex","RegExp","grep","test","sort","this","extend","delay","filter","paramName","randId","Math","floor","random","append","ENTER_KEY","UP_ARROW_KEY","DOWN_ARROW_KEY","ESCAPE_KEY","mouseHover","timer","on","mousemove","mouseout","click","preventDefault","blur","focus","keyup","which","clearTimeout","setTimeout","keydown","paste","resize","addSuggestions","loadSuggestions","getJson","selectedUrl","selectedSuggestion","text","reset","show","force","hide","ms","pattern","sortFunc","action","getId","withHash","reservedKey","destroy","unbind","remove","jQuery"],"mappings":"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","file":"suggestion-box.min.js","sourcesContent":["(function ($) {\r\n\r\n    $.fn.suggestionBox = function (options) {\r\n\r\n        var $searchBox = this;\r\n\r\n        var settings = $.extend({\r\n                // default settings.\r\n                topOffset: 0,\r\n                leftOffset: 0,\r\n                widthAdjustment: 0,\r\n                delay: 400, // in ms\r\n                heading: 'Suggestions',\r\n                results: 10,\r\n                fadeIn: true,\r\n                fadeOut: false,\r\n                menuWidth: 'auto',\r\n                showNoSuggestionsMessage: false,\r\n                noSuggestionsMessage: 'No Suggestions Found',\r\n                filter: false,\r\n                filterPattern: \"({INPUT})\",\r\n                ajaxError: function (e) {\r\n                    console.log(e);\r\n                },\r\n                ajaxSuccess: function (data) {\r\n                },\r\n                onClick: function (e) {\r\n                    goToSelection();\r\n                },\r\n                paramName: 'search',\r\n                customValues: []\r\n            },\r\n            options);\r\n\r\n\r\n        // Inject the suggestion box into the body of the web page\r\n        var randId = 'suggestion-box-' + Math.floor(Math.random() * 10000000);\r\n        // Inject the suggestion box into the body of the web page\r\n        $('body').append('<div id=\"' + randId + '\" class=\"suggestion-box\"></div>');\r\n\r\n        // Turn off autocomplete\r\n        $searchBox.attr('autocomplete', 'off');\r\n\r\n        var $suggestionBox = $('#' + randId);\r\n        setSuggestionBoxPosition();\r\n\r\n        // Constants for key values\r\n        var ENTER_KEY = 13;\r\n        var UP_ARROW_KEY = 38;\r\n        var DOWN_ARROW_KEY = 40;\r\n        var ESCAPE_KEY = 27;\r\n\r\n        // Default values for selected list item\r\n        var selectedLi = -1;\r\n        var selectedHref = '#';\r\n\r\n        // Is the mouse hovering over the suggestion box?\r\n        var mouseHover = false;\r\n        // Timer for only making ajax calls when the user stops typing\r\n        var timer = null;\r\n        // Did we get any suggestions?\r\n        var matches = false;\r\n        // Is the search box active (does it have focus)\r\n        var active = false;\r\n        // create a blank object for our request\r\n        var request = {};\r\n        var jsonData = {};\r\n\r\n        // The value of the input when ajax was called\r\n        var ajaxCalledVal;\r\n\r\n\r\n        function doClick(e) {\r\n            settings.onClick(e);\r\n            $suggestionBox.css('display', 'none');\r\n            $searchBox.val('');\r\n        }\r\n\r\n        function isSuggestion(e) {\r\n            return $(e.target).parents('a').length > 0 || e.target.nodeName === 'A';\r\n        }\r\n\r\n        $suggestionBox.on({\r\n            mousemove: function (e) {\r\n                if (isSuggestion(e)) {\r\n                    unselect(selectedLi);\r\n                    selectedLi = getSelectionMouseIsOver(e);\r\n                    select(selectedLi);\r\n                    mouseHover = true;\r\n                }\r\n            },\r\n            mouseout: function (e) {\r\n                if (isSuggestion(e)) {\r\n                    mouseHover = false;\r\n                    unselect(selectedLi);\r\n                    resetSelection();\r\n                }\r\n            },\r\n            click: function (e) {\r\n                if (isSuggestion(e)) {\r\n                    e.preventDefault();\r\n                    doClick(e);\r\n                }\r\n            }\r\n        });\r\n\r\n        $searchBox.on({\r\n            blur: function () {\r\n                active = false;\r\n                // Only close the menu if we are not clicking a link\r\n                if (!mouseHover) {\r\n                    hideSuggestionBox();\r\n                }\r\n            },\r\n            focus: function () {\r\n                active = true;\r\n                if ($(this).val()) {\r\n                    showSuggestions(jsonData);\r\n                }\r\n            },\r\n            keyup: function (e) {\r\n\r\n                // Ignore the navigation keys. We don't want to fire ajax calls when navigating\r\n                if (e.which !== UP_ARROW_KEY && e.which !== DOWN_ARROW_KEY && e.which !== ESCAPE_KEY && e.which !== ENTER_KEY) {\r\n                    if (settings.url) {\r\n                        resetSelection();\r\n\r\n                        if (timer) {\r\n                            clearTimeout(timer);\r\n                        }\r\n                    }\r\n\r\n                    if (settings.url) {\r\n                        // set the request to be sent sent as the data parameter\r\n                        request[settings.paramName] = $searchBox.val();\r\n                        timer = setTimeout(function () {\r\n                            getSuggestions(settings.url)\r\n                        }, settings.delay);\r\n                    }\r\n                    if (settings.filter) {\r\n                        showSuggestions();\r\n                    }\r\n                }\r\n            },\r\n            keydown: function (e) {\r\n                if ($suggestionBox.css('display') !== 'none') {\r\n                    if (e.which == DOWN_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                    }\r\n                    if (e.which == UP_ARROW_KEY) {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                    }\r\n                    if (e.which === ENTER_KEY && selectedLi > -1) {\r\n                        e.preventDefault();\r\n                        $suggestionBox.find('.selected a').click();\r\n                    }\r\n                    if (e.which == ESCAPE_KEY) {\r\n                        e.preventDefault();\r\n                        hideSuggestionBox();\r\n                    }\r\n                }\r\n            },\r\n            paste: function () {\r\n                // Simulate keyup after 200ms otherwise the value of the search box will not be available\r\n                setTimeout(function () {\r\n                    $searchBox.keyup();\r\n                }, 200);\r\n            }\r\n        });\r\n\r\n        // Reset the position of the suggestion box if the window is re-sized\r\n        $(window).resize(function () {\r\n            setSuggestionBoxPosition();\r\n        });\r\n\r\n        /**\r\n         * Selects the suggestion at the given position\r\n         * @param position\r\n         */\r\n        function select(position) {\r\n            selectedHref = $suggestionBox.find(\"li:eq(\" + position + \") a\").attr('href');\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").addClass('selected');\r\n        }\r\n\r\n        /**\r\n         * Unselects the suggestion at the given position\r\n         * @param position\r\n         */\r\n        function unselect(position) {\r\n            $suggestionBox.find(\"li:eq(\" + position + \")\").removeClass('selected');\r\n        }\r\n\r\n        /**\r\n         * Resets any selected suggestions\r\n         */\r\n        function resetSelection() {\r\n            selectedHref = '#';\r\n            selectedLi = -1;\r\n            // remove all selected on reset\r\n            $suggestionBox.find('li').removeClass('selected');\r\n        }\r\n\r\n        /**\r\n         * Moves the selection down to the next suggestion\r\n         */\r\n        function moveDown() {\r\n            var listSize = $suggestionBox.find('li').size();\r\n            if (selectedLi === (listSize - 1)) {\r\n                unselect(selectedLi);\r\n                resetSelection();\r\n            } else {\r\n                unselect(selectedLi);\r\n                selectedLi++;\r\n                select(selectedLi);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Moves the selection up to the previous suggestions\r\n         */\r\n        function moveUp() {\r\n            if (selectedLi > 0) {\r\n                unselect(selectedLi);\r\n                selectedLi--;\r\n                select(selectedLi);\r\n            } else if (selectedLi == -1) {\r\n                unselect(selectedLi);\r\n                selectedLi = $suggestionBox.find('li').size() - 1;\r\n                select(selectedLi);\r\n            } else {\r\n                unselect(0);\r\n                resetSelection();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Redirects the user to the selected suggestion location\r\n         */\r\n        function goToSelection() {\r\n            window.location = selectedHref;\r\n        }\r\n\r\n        /**\r\n         * Makes an ajax call to the given url\r\n         * @param url\r\n         */\r\n        function getSuggestions(url) {\r\n            ajaxCalledVal = $searchBox.val();\r\n            $.ajax({\r\n                url: url,\r\n                data: request,\r\n                dataType: 'json',\r\n                success: function (data) {\r\n\r\n                    var selectionHasChanged = true;\r\n                    var currentLi = selectedLi;\r\n\r\n                    if (jsonData.results && data.results) {\r\n                        selectionHasChanged = (JSON.stringify(jsonData.results[selectedLi]) !== JSON.stringify(data.results[selectedLi]))\r\n                    }\r\n\r\n                    setJsonData(data);\r\n                    showSuggestions();\r\n\r\n                    // Keep selection if no new information has been entered since ajax was called and the selection is the same.\r\n                    // This prevents the flick back effect when menu has the same data but the ajax hasn't finished.\r\n                    if (currentLi > -1 && ($searchBox.val() === ajaxCalledVal) && !selectionHasChanged) {\r\n                        selectedLi = currentLi;\r\n                        select(selectedLi);\r\n                    }\r\n\r\n                    settings.ajaxSuccess(data);\r\n                },\r\n                error: function (e) {\r\n                    settings.ajaxError(e);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Returns the index of the list item the mouse is currently hovering over\r\n         * @param e\r\n         * @returns {Number}\r\n         */\r\n        function getSelectionMouseIsOver(e) {\r\n            var $parentLi = $(e.target).parents('li');\r\n            return $parentLi.parent().children().index($parentLi);\r\n        }\r\n\r\n        /**\r\n         * Sets the position of the suggestion box\r\n         */\r\n        function setSuggestionBoxPosition() {\r\n            var borders = getCssValue($searchBox, 'border-bottom-width') + getCssValue($searchBox, 'border-top-width');\r\n            var padding = getCssValue($searchBox, 'padding-bottom') + getCssValue($searchBox, 'padding-top');\r\n\r\n            $suggestionBox.css({\r\n                'position': 'absolute',\r\n                'left': ($searchBox.offset().left) + settings.leftOffset,\r\n                'top': ($searchBox.offset().top) + ($searchBox.height() + borders + padding + settings.topOffset)\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Gets the css integer value for the given element.\r\n         * @param element\r\n         * @param name\r\n         * @returns {Number}\r\n         */\r\n        function getCssValue(element, name) {\r\n            return parseInt(element.css(name).replace('px', ''));\r\n        }\r\n\r\n        /**\r\n         * Hides the suggestion box\r\n         */\r\n        function hideSuggestionBox() {\r\n            if (settings.fadeOut) {\r\n                $suggestionBox.fadeOut();\r\n            } else {\r\n                $suggestionBox.css('display', 'none');\r\n            }\r\n            resetSelection();\r\n        }\r\n\r\n        /**\r\n         * Displays the suggestion-box\r\n         */\r\n        function showSuggestionBox() {\r\n            if (settings.fadeIn) {\r\n                $suggestionBox.fadeIn();\r\n            } else {\r\n                $suggestionBox.css('display', 'block');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Sets the width of the suggestion box\r\n         */\r\n        function setSuggestionBoxWidth() {\r\n            var searchBoxWidth = getSearchBoxWidth() + settings.widthAdjustment;\r\n            if (settings.menuWidth == 'auto') {\r\n                $suggestionBox.css({\r\n                    'min-width': searchBoxWidth\r\n                });\r\n            } else if (settings.menuWidth == 'constrain') {\r\n                $suggestionBox.css({\r\n                    'width': searchBoxWidth\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns the width of the search box\r\n         * @returns {number}\r\n         */\r\n        function getSearchBoxWidth() {\r\n            return (\r\n                $searchBox.width() +\r\n                getCssValue($searchBox, 'border-left-width') +\r\n                getCssValue($searchBox, 'border-right-width') +\r\n                getCssValue($searchBox, 'padding-left') +\r\n                getCssValue($searchBox, 'padding-right')\r\n            );\r\n        }\r\n\r\n        function createSuggestionsList(data) {\r\n            var $suggestions = '<div class=\"suggestion-header\">' + settings.heading + '</div> ' +\r\n                '<ul class=\"suggestion-box-list\">';\r\n\r\n            $.each(data.results, function (key, value) {\r\n                if (value.suggestion && value.url) {\r\n                    matches = true;\r\n                    var attr = \"\";\r\n                    if (value.attr) {\r\n                        $.each(value.attr, function (key, value) {\r\n                            var keys = Object.keys(value);\r\n                            for (var i = 0; i < keys.length; i++) {\r\n                                attr += keys[i] + '=\"' + value[keys[i]] + '\" '\r\n                            }\r\n                        });\r\n                    }\r\n                    $suggestions += '<li><a href=\"' + value.url + '\" ' + attr + '>' + value.suggestion;\r\n\r\n                    for (var i = 0; i < settings.customValues.length; i++) {\r\n                        var custom = value[settings.customValues[i]];\r\n                        if (custom) {\r\n                            $suggestions += value[settings.customValues[i]];\r\n                        }\r\n\r\n                    }\r\n\r\n                    $suggestions += '</a></li>';\r\n                } else {\r\n                    return false;\r\n                }\r\n\r\n                // break when maximum results have been found\r\n                if (key === (settings.results - 1)) {\r\n                    return false;\r\n                }\r\n            });\r\n            $suggestions += '</ul>';\r\n\r\n            return $suggestions;\r\n        }\r\n\r\n        /**\r\n         * Shows the suggestion-box suggestions if they are available based on the data passed in\r\n         */\r\n        function showSuggestions(forceShow) {\r\n            resetSelection();\r\n\r\n            matches = false;\r\n\r\n            var data = (settings.filter) ? filterResults($searchBox.val()) : jsonData;\r\n\r\n            if (data) {\r\n                if (data.results) {\r\n                    var $suggestions = createSuggestionsList(data);\r\n                }\r\n            }\r\n\r\n            // Check for focus before showing suggestion box. User could have clicked outside before request finished.\r\n            if (active || forceShow) {\r\n                if (matches) {\r\n                    $suggestionBox.html($suggestions);\r\n                    setSuggestionBoxWidth();\r\n                    showSuggestionBox();\r\n                } else if (forceShow) {\r\n                    if (settings.showNoSuggestionsMessage) {\r\n                        $suggestionBox.html('<div class=\"no-suggestions\">' + settings.noSuggestionsMessage + '</div>');\r\n                    }\r\n                    setSuggestionBoxWidth();\r\n                    showSuggestionBox();\r\n\r\n                } else if (settings.showNoSuggestionsMessage && $searchBox.val().length > 0) {\r\n                    setSuggestionBoxWidth();\r\n                    showSuggestionBox();\r\n\r\n                    $suggestionBox.html('<div class=\"no-suggestions\">' + settings.noSuggestionsMessage + '</div>');\r\n                } else {\r\n                    hideSuggestionBox();\r\n                }\r\n            } else {\r\n                hideSuggestionBox();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Sets the current JSON data ready for display\r\n         * @param json\r\n         */\r\n        function setJsonData(json) {\r\n            if (json) {\r\n                jsonData = (json instanceof Object) ? json : $.parseJSON(json);\r\n            } else {\r\n                jsonData = {};\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Loads JSON from the given url\r\n         * @param url\r\n         */\r\n        function loadJson(url) {\r\n            $.ajax({\r\n                url: url,\r\n                dataType: 'json',\r\n                success: function (data) {\r\n                    setJsonData(data);\r\n                },\r\n                error: function (e) {\r\n                    console.log(e);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Filters the JSON based on the user input\r\n         * @param value\r\n         * @returns {Object}\r\n         */\r\n        function filterResults(value) {\r\n            var data;\r\n\r\n            // escape regex chars\r\n            value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n            filterPattern = settings.filterPattern.replace(\"{INPUT}\", value);\r\n\r\n            if (!value) {\r\n                return {};\r\n            }\r\n            if (jsonData) {\r\n                if (jsonData.results) {\r\n\r\n                    var regex = new RegExp(filterPattern, \"i\");\r\n\r\n                    data = $.grep(jsonData.results, function (name) {\r\n                        return regex.test(name.suggestion);\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (settings.sort) {\r\n                data.sort(settings.sort);\r\n            }\r\n\r\n            var json = JSON.stringify({\"results\": data});\r\n\r\n            return $.parseJSON(json);\r\n        }\r\n\r\n        // returned methods\r\n        return {\r\n            getSuggestions: function (url) {\r\n                getSuggestions(url);\r\n                return this;\r\n            },\r\n            addSuggestions: function (json) {\r\n                setJsonData(json);\r\n                return this;\r\n            },\r\n            loadSuggestions: function (url) {\r\n                loadJson(url);\r\n                return this;\r\n            },\r\n            getJson: function () {\r\n                return JSON.stringify(jsonData);\r\n            },\r\n            moveUp: function () {\r\n                moveUp();\r\n                return this;\r\n            },\r\n            moveDown: function () {\r\n                moveDown();\r\n                return this;\r\n            },\r\n            selectedUrl: function () {\r\n                return selectedHref;\r\n            },\r\n            selectedSuggestion: function () {\r\n                return $suggestionBox.find('li:eq(' + selectedLi + ')').text();\r\n            },\r\n            position: function () {\r\n                return selectedLi;\r\n            },\r\n            select: function (position) {\r\n                unselect(selectedLi);\r\n                selectedLi = position;\r\n                select(position);\r\n                return this;\r\n            },\r\n            reset: function () {\r\n                unselect(selectedLi);\r\n                resetSelection();\r\n                return this;\r\n            },\r\n            show: function (force) {\r\n                force = (force) ? force : false;\r\n                showSuggestions(force);\r\n                return this;\r\n            },\r\n            hide: function () {\r\n                hideSuggestionBox();\r\n                return this;\r\n            },\r\n            url: function (url) {\r\n                settings.url = url;\r\n                return this;\r\n            },\r\n            fadeIn: function (fadeIn) {\r\n                settings.fadeIn = fadeIn;\r\n                return this;\r\n            },\r\n            fadeOut: function (fadeOut) {\r\n                settings.fadeOut = fadeOut;\r\n                return this;\r\n            },\r\n            delay: function (ms) {\r\n                settings.delay = ms;\r\n                return this;\r\n            },\r\n            heading: function (heading) {\r\n                settings.heading = heading;\r\n                return this;\r\n            },\r\n            results: function (results) {\r\n                settings.results = results;\r\n                return this;\r\n            },\r\n            ajaxError: function (ajaxError) {\r\n                settings.ajaxError = ajaxError;\r\n                return this;\r\n            },\r\n            ajaxSuccess: function (ajaxSuccess) {\r\n                settings.ajaxSuccess = ajaxSuccess;\r\n                return this;\r\n            },\r\n            filter: function (filter) {\r\n                settings.filter = filter;\r\n                return this;\r\n            },\r\n            filterPattern: function (pattern) {\r\n                settings.filterPattern = pattern;\r\n                return this;\r\n            },\r\n            sort: function (sortFunc) {\r\n                settings.sort = sortFunc;\r\n                return this;\r\n            },\r\n            onClick: function (action) {\r\n                settings.onClick = action;\r\n                return this;\r\n            },\r\n            getId: function (withHash) {\r\n                return (withHash) ? '#' + randId : randId;\r\n            },\r\n            reservedKey: function (e) {\r\n                var key = e.which;\r\n                return key === ENTER_KEY || key === ESCAPE_KEY || key === UP_ARROW_KEY || key === DOWN_ARROW_KEY\r\n            },\r\n            destroy: function () {\r\n                $searchBox.unbind(this);\r\n                $suggestionBox.remove();\r\n                return null;\r\n            }\r\n        };\r\n    };\r\n}(jQuery));"],"sourceRoot":"/source/"}